name: Release

on:
  release:
    types: [published]

jobs:
  publish-npm:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      id-token: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Use Node.js 20
        uses: actions/setup-node@v4
        with:
          node-version: 20.x
          registry-url: 'https://registry.npmjs.org'
          cache: npm

      - name: Install dependencies
        run: npm ci

      - name: Typecheck
        run: npm run typecheck

      - name: Test
        run: npm test -- --ci

      - name: Build
        run: npm run build

      - name: Read package version
        id: pkg
        run: echo "version=$(node -p \"require('./package.json').version\")" >> $GITHUB_OUTPUT

      - name: Validate tag matches package.json version
        run: |
          TAG="${{ github.event.release.tag_name }}"
          PKG_VERSION="${{ steps.pkg.outputs.version }}"
          if [ "$TAG" != "v$PKG_VERSION" ] && [ "$TAG" != "$PKG_VERSION" ]; then
            echo "Release tag ($TAG) does not match package.json version ($PKG_VERSION)" >&2
            exit 1
          fi

      - name: Ensure version not already published
        env:
          PKG_VERSION: ${{ steps.pkg.outputs.version }}
        run: |
          PKG_NAME=$(node -p "require('./package.json').name")
          if npm view "$PKG_NAME@$PKG_VERSION" version >/dev/null 2>&1; then
            echo "$PKG_NAME@$PKG_VERSION is already published" >&2
            exit 1
          fi

      - name: Publish to npm
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
          NPM_CONFIG_PROVENANCE: true
        run: npm publish --access public
